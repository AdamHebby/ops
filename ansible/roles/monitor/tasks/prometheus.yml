---

- name: Creating prometheus user group
  group: name="{{ prometheus_group_name }}"
  become: true

- name: Creating prometheus user
  user:
    name: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{ prometheus_user_name }} nologin User"
    createhome: "no"
    state: present

- name: Install prometheus
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: Copy prometheus file to bin
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "/usr/local/bin/prometheus"
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    remote_src: yes
    mode: 0755

- name: Delete prometheus tmp folder
  file:
    path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
    state: absent

- name: Creates directory
  file: 
    path: "/data/prometheus/"
    state: directory
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    mode: 0755

- name: Creates directory
  file: 
    path: "/etc/prometheus/"
    state: directory
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_group_name }}"
    mode: 0755

- name: config file
  template:
    src: prometheus.conf.j2
    dest: /etc/prometheus/prometheus.conf

- name: Create Unit file for prometheus
  template: src=prometheus.service.j2 dest=/etc/systemd/system/prometheus.service mode=644
  notify:
    - reload systemctl

- name: start prometheus service
  service: name=prometheus.service state=restarted enabled=yes

- name: Check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200